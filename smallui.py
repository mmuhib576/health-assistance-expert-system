# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'scaledUi.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import pickle
import warnings
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox, QFileDialog
from sklearn.preprocessing import StandardScaler
from tensorflow import keras
from keras.preprocessing import image
from keras.applications.vgg16 import preprocess_input
import numpy as np
import pandas as pd
import time
from jinja2 import Environment, FileSystemLoader
from weasyprint import HTML
import webbrowser as wb

########################### Scaling Variables ##########################################################################
scale = StandardScaler()
#diabetes
df = pd.read_csv('diabetes.csv', sep=',', header=0)
X = df[['Pregnancies', 'Glucose', 'BloodPressure', 'SkinThickness', 'BMI', 'Insulin','DiabetesPedigreeFunction', 'Age']]
scaledX = scale.fit_transform(X)

#heart
scale2 = StandardScaler()
df1 = pd.read_csv('heart.csv',sep=',',header=0)
X1=df1[['age','sex','cp','trestbps','chol','fbs','restecg','thalach','exang','oldpeak','slope','ca','thal']]
scaledX2 = scale2.fit_transform(X1)

class Ui_MainWindow(object):

##########################################  BACKEND FUNCTIONS  #########################################################

########## FILE BROWSER POPUP FUNCTIONS ###################
    def lungfilebrowser(self):
                global filepath
                filename = QFileDialog.getOpenFileName()
                filepath = filename[0]
                self.lung_imglbl.setPixmap(QtGui.QPixmap(filepath))

    def brainfilebrowser(self):
                global filepath
                filename = QFileDialog.getOpenFileName()
                filepath = filename[0]
                self.brain_imglbl.setPixmap(QtGui.QPixmap(filepath))

    def bloodfilebrowser(self):
                global filepath
                filename = QFileDialog.getOpenFileName()
                filepath = filename[0]
                self.blood_imglbl.setPixmap(QtGui.QPixmap(filepath))


########## MESSAGE BOX FUNCTION ########################################################################################

    def message_box(self, result, logo):
                msg = QMessageBox()
                msg.setWindowTitle("RESULT")
                font = QtGui.QFont()
                font.setFamily("Arial")
                font.setPointSize(12)
                # font.setBold(True)
                # font.setWeight(75)
                msg.setFont(font)
                msg.setText(result)
                if (logo == "i"):
                        msg.setIcon(QMessageBox.Information)
                elif (logo == "c"):
                        msg.setIcon(QMessageBox.Critical)
                elif (logo == "w"):
                        msg.setIcon(QMessageBox.Warning)

                msg.setStandardButtons(QMessageBox.Ok)

                icon = QtGui.QIcon()
                icon.addPixmap(QtGui.QPixmap("Images/LOGO.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                msg.setWindowIcon(icon)
                x = msg.exec_()

    def logout_msgbox(self):

     msg = QMessageBox()
     msg.setWindowTitle("RESULT")
     font = QtGui.QFont()
     font.setFamily("Arial")
     font.setPointSize(12)
     msg.setFont(font)
     msg.setText("DO YOU WANT TO LOGOUT?")
     msg.setStandardButtons(QMessageBox.Yes|QMessageBox.No)
     msg.setDefaultButton(QMessageBox.No)
     icon = QtGui.QIcon()
     icon.addPixmap(QtGui.QPixmap("Images/LOGO.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
     msg.setWindowIcon(icon)
     msg.setIcon(QMessageBox.Information)
     msg.buttonClicked.connect(self.logout_confirm)
     x = msg.exec_()

    def logout_confirm(self,i):
         d = i.text()
         if(d=="&Yes"):
          self.stackedWidget.setCurrentWidget(self.patient_page)
         else :
          self.stackedWidget.setCurrentWidget(self.homescreen_page)


########## CLASSIFY FUNCTIONS ###################

    def heart_classify(self):

                age = int(self.heart_age_value.text())

                if self.heart_gender_malebtn.isChecked():
                        sex = 1
                else:
                        sex = 0

                cp = self.heart_chestpain_value.currentText()
                if (cp == "ASYMPTOTIC"):
                        cp = 0
                if (cp == "ATYPICAL"):
                        cp = 1
                if (cp == "NON ANGINA"):
                        cp = 2
                if (cp == "TYPICAL"):
                        cp = 3
                bp = int(self.heart_bp_value.text())
                cholestrol = int(self.heart_cholestrol_value.text())
                if self.heart_sugar_yesbtn.isChecked():
                        sugar = 1
                else:
                        sugar = 0
                if self.heart_ecg_yesbtn.isChecked():
                        ecg = 1
                else:
                        ecg = 0
                heartrate = int(self.heart_maxrate_value.text())
                if self.heart_angina_yesbtn.isChecked():
                        angina = 1
                else:
                        angina = 0
                oldpeak = float(self.heart_oldpeak_value.value())
                slope = int(self.heart_slope_value.currentText())
                vessel = int(self.heart_vessel_value.currentText())
                thalassemia = int(self.heart_thalassemia_value.currentText())
                global heart_parameters, finalresult
                heart_parameters = [[age, sex, cp, bp, cholestrol, sugar, ecg, heartrate, angina, oldpeak, slope, vessel,
                                     thalassemia]]
                print("Passed Values Are:", heart_parameters)
                print("----------------------------------------------------------------")
                scalable_result = scale2.transform(heart_parameters)
                print(scalable_result)
                print("----------------------------------------------------------------")
                lm = pickle.load(open('heart_ml.h5', 'rb'))
                finalresult = lm.predict(scalable_result)
                if (finalresult == 1):
                        self.message_box("RISK TO HEART", "c")
                else:
                        self.message_box("NO RISK TO HEART", "i")
                # print(finalresult)

    def diabetes_classify(self):
                pregnancies = int(self.diabetes_pregnancies_value.text())
                glucose = int(self.diabetes_glucose_value.text())
                bp = int(self.diabetes_bp_value.text())
                skin = int(self.diabetes_skin_value.text())
                bmi = float(self.diabetes_bmi_value.text())
                insulin = int(self.diabetes_insulin_value.text())
                pedigree = float(self.diabetes_pedigree_value.text())
                age = int(self.diabetes_age_value.text())
                global diabetes_parameters, diabetes_finalresult
                diabetes_parameters = [[pregnancies, glucose, bp, skin, bmi, insulin, pedigree, age]]
                print(diabetes_parameters)
                result1 = scale.transform(diabetes_parameters)
                print(result1)
                lm = pickle.load(open('diabetes_ml_rfc.h5', 'rb'))
                diabetes_finalresult = lm.predict(result1)
                if (diabetes_finalresult == 1):
                        self.message_box("DIABETIC RISK DETECTED!", "c")
                else:
                        self.message_box("NO DIABETIC RISK DETECTED", "i")

    def lung_classify(self):
                model = keras.models.load_model("pneumonia.h5")
                model.load_weights("pneumonia_weights.h5")
                img1 = image.load_img(filepath, target_size=(150, 150))
                y = image.img_to_array(img1)
                y = np.expand_dims(y, axis=0)
                img_data = preprocess_input(y)
                img_data /= 255.0
                classes = model.predict(img_data)
                result = classes[0]
                global lung_finalresult
                if (result < 2.8e-11):
                        lung_finalresult = 1
                        self.message_box("RISK OF PNEUMONIA DETECTED", "c")
                else:
                        lung_finalresult = 0
                        self.message_box("NO RISK OF PNEUMONIA DETECTED", "i")

    def blood_classify(self):

                model = keras.models.load_model("Blood.h5")
                model.load_weights("Blood_weights.h5")
                img = image.load_img(filepath, target_size=(150, 150))
                x = image.img_to_array(img)
                x = np.expand_dims(x, axis=0)
                img_data = preprocess_input(x)
                # img_data/=255.0
                classes = model.predict(img_data)
                global blood_finalresult
                blood_finalresult = classes[0]
                # print(classes)
                print(blood_finalresult)
                if (blood_finalresult < 0.5):
                        self.message_box("RISK OF MALARIA DETECTED!", "c")

                else:
                        self.message_box("NO RISK OF MALARIA DETECTED", "i")

    def brain_classify(self):

        model = keras.models.load_model("brainvgg.h5")
        model.load_weights("brainvgg_weights.h5")
        img1 = image.load_img(filepath, target_size=(150, 150))
        y = image.img_to_array(img1)
        y = np.expand_dims(y, axis=0)
        img_data = preprocess_input(y)
        img_data /= 255.0
        classes = model.predict(img_data)
        result = classes[0]
        global brain_finalresult
        if (result < 0.5):
                        time.sleep(5)
                        brain_finalresult = 0
                        self.message_box("NO BRAIN RELATED RISKS DETECTED", "i")
        else:
                        time.sleep(5)
                        brain_finalresult = 1
                        self.message_box("SIGNS OF TUMOUR DETECTED", "c")

    def covid_classify(self):
        lm = pickle.load(open('covid_lr.h5', 'rb'))
        warnings.filterwarnings('ignore')
        cough = int(self.covid_cough_value.text())
        fever = int(self.covid_fever_value.text())
        throat = int(self.covid_throat_value.text())
        breath = int(self.covid_breathing_value.text())

        parameters = [[cough, fever, throat, breath]]
        result001 = lm.predict(parameters)
        print(result001)
        if (result001 == 0):
                        self.message_box("NO SIGNS OF COVID-19", "i")
        if (result001 == 1):
                        self.message_box("SIGNS OF COVID-19 DETECTED", "c")
####################REPORT GENERATION FUNCTIONS####################################################################################
    def bloodreport(self):

     imm = filepath
     print(imm)
     name = pname
     id = pid
     contact = pcontact
     str1 = blood_finalresult
     if (str1 == 1):
         resss = "NO SIGNS"
     else:
         resss = "SIGNS"
     path = "Reports/"
     name_rep = str(path) + str(name) + ".pdf"
     xpath = str(name)+".pdf"
     print(name_rep)
     env = Environment(loader=FileSystemLoader('.'))
     template = env.get_template("myreport_blood.html")
     template_vars = {"photo": "Images/logo2.png", "nam": name, "pid": id, "con": contact, "brr": imm, "res": resss}
     html_out = template.render(template_vars)
     HTML(string=html_out).write_pdf(name_rep, presentational_hints=True)
     self.message_box("REPORT GENERATED","i")
     wb.open_new("C:/Users/musta/Desktop/FinalUI (1050x700)/"+name_rep)

    def brainreport(self):
       imm = filepath
       print(imm)
       name = pname
       id = pid
       contact = pcontact
       str1 = brain_finalresult
       if (str1 == 0):
           resss = "NO SIGNS"
       else:
           resss = "SIGNS"
       path = "Reports/"
       name_rep = str(path) + str(name) + ".pdf"
       print(name_rep)
       env = Environment(loader=FileSystemLoader('.'))
       template = env.get_template("myreport_brain.html")
       template_vars = {"photo": "Images/logo2.png", "nam": name, "pid": id, "con": contact, "brr": imm, "res": resss}
       html_out = template.render(template_vars)
       HTML(string=html_out).write_pdf(name_rep, presentational_hints=True)
       self.message_box("REPORT GENERATED", "i")
       wb.open_new("C:/Users/musta/Desktop/FinalUI (1050x700)/" + name_rep)

    def lungreport(self):
      imm = filepath
      print(imm)
      name = pname
      id = pid
      contact = pcontact
      str1 = lung_finalresult
      if (str1 == 0):
        resss = "NO SIGNS"
      else:
        resss = "SIGNS"
      path = "Reports/"
      name_rep = str(path) + str(name) + ".pdf"
      env = Environment(loader=FileSystemLoader('.'))
      template = env.get_template("myreport_lung.html")
      template_vars = {"photo": "Images/logo2.png", "nam": name, "pid": id, "con": contact, "brr": imm, "res": resss}
      html_out = template.render(template_vars)
      HTML(string=html_out).write_pdf(name_rep, presentational_hints=True)
      self.message_box("REPORT GENERATED", "i")
      wb.open_new("C:/Users/musta/Desktop/FinalUI (1050x700)/" + name_rep)

    def diabetesreport(self):

     warnings.filterwarnings("ignore", module="weasyprint")
     name = pname
     id = pid
     contact = pcontact
     str1 = diabetes_finalresult
     if(str1==0):
        resss="NO SIGNS"
     else:
        resss="SIGNS"

     env = Environment(loader=FileSystemLoader('.'))
     path = "Reports/"
     name_rep = str(path) + str(name) + ".pdf"
     template = env.get_template("myreport_diabetes.html")
     fname = "Images/LOGO.png"  # a123=[[preg72,gluc72,bp72,skin72,bmi72,insul72,pedig72,age72]]
     template_vars = {"photo": fname, "nam": name, "pid": id, "con": contact, "res": resss, "preg": diabetes_parameters[0][0],
                 "gluc": diabetes_parameters[0][1], "bp": diabetes_parameters[0][2], "skin": diabetes_parameters[0][3], "bmi": diabetes_parameters[0][4], "insulin": diabetes_parameters[0][5],
                 "pedig": diabetes_parameters[0][6], "age": diabetes_parameters[0][7]}
     html_out = template.render(template_vars)
     HTML(string=html_out).write_pdf(name_rep, presentational_hints=True)
     self.message_box("REPORT GENERATED", "i")
     wb.open_new("C:/Users/musta/Desktop/FinalUI (1050x700)/" + name_rep)


    def heartreport(self):

     warnings.filterwarnings("ignore", module="weasyprint")
     name = pname
     id = pid
     contact = pcontact
     a1234 = heart_parameters
     str1 = finalresult
     if (heart_parameters[0][1] == 0):
      gen77 = "FEMALE"
     else:
      gen77 = "MALE"

     if(heart_parameters[0][2]==0):
          cpt = "ASYMPTOTIC"
     if (heart_parameters[0][2] == 1):
          cpt = "ATYPICAL"
     if (heart_parameters[0][2] == 2):
          cpt = "NON ANGINA"
     if (heart_parameters[0][2] == 3):
          cpt = "TYPICAL"

     if(a1234[0][5]==0):
         sugar = "NO"
     else:
         sugar = "YES"

     if (a1234[0][6] == 0):
         ecg = "NO"
     else:
         ecg = "YES"

     if (a1234[0][8] == 0):
         angina = "NO"
     else:
         angina = "YES"



     if (str1 == 0):
       resss = "NO SIGNS"
     else:
       resss = "SIGNS"

     env = Environment(loader=FileSystemLoader('.'))
     path = "Reports/"
     name_rep = str(path) + str(name) + ".pdf"
     template = env.get_template("myreport_heart.html")
     #fname = "Images/LOGO.png"
     template_vars = {"photo": "Images/logo2.png", "nam": name, "pid": id, "con": contact, "res": resss, "age": a1234[0][0],
                 "gen": gen77, "cpt": cpt, "rbp": a1234[0][3], "chol": a1234[0][4], "sugl": sugar,
                 "recg": ecg, "rate": a1234[0][7], "ang": angina, "oldp": a1234[0][9],
                 "slope": a1234[0][10], "vssl": a1234[0][11], "thal": a1234[0][12]}
     html_out = template.render(template_vars)
     HTML(string=html_out).write_pdf(name_rep, presentational_hints=True)
     self.message_box("REPORT GENERATED","i")
     wb.open_new("C:/Users/musta/Desktop/FinalUI (1050x700)/" + name_rep)

####################BUTTON FUNCTIONS####################################################################################
    def submit(self):
        global pname,pid,pcontact
        pname = self.patient_name_value.text()
        pid = self.patient_id_value.text()
        pcontact = self.patient_contact_value.text()

        if(pname==""):
            self.message_box("PLEASE ENTER A VALID NAME","w")
        elif (pid == ""):
            self.message_box("PLEASE ENTER A VALID ID", "w")
        elif (pcontact == ""):
            self.message_box("PLEASE ENTER A VALID CONTACT NUMBER", "w")
        else:
         self.stackedWidget.setCurrentWidget(self.homescreen_page)
         self.patient_name_value.setText("")
         self.patient_id_value.setText("")
         self.patient_contact_value.setText("")

    def logout(self):
        self.logout_msgbox()
########## UI START ####################################################################################################

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1050, 700)
        MainWindow.setMaximumSize(QtCore.QSize(1050, 700))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("Images/LOGO2.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.stackedWidget = QtWidgets.QStackedWidget(self.centralwidget)
        self.stackedWidget.setGeometry(QtCore.QRect(0, 0, 1050, 700))
        self.stackedWidget.setMaximumSize(QtCore.QSize(1050, 700))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(26)
        font.setBold(True)
        font.setWeight(75)
        self.stackedWidget.setFont(font)
        self.stackedWidget.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.stackedWidget.setObjectName("stackedWidget")
        self.patient_page = QtWidgets.QWidget()
        self.patient_page.setObjectName("patient_page")
        self.patient_coverpage = QtWidgets.QLabel(self.patient_page)
        self.patient_coverpage.setGeometry(QtCore.QRect(-270, 0, 1671, 171))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(25)
        font.setBold(True)
        font.setWeight(75)
        self.patient_coverpage.setFont(font)
        self.patient_coverpage.setStyleSheet("background-color: rgb(36, 37, 130);\n"
"color:white;")
        self.patient_coverpage.setAlignment(QtCore.Qt.AlignCenter)
        self.patient_coverpage.setObjectName("patient_coverpage")
        self.patient_logo = QtWidgets.QLabel(self.patient_page)
        self.patient_logo.setGeometry(QtCore.QRect(0, 10, 200, 161))
        self.patient_logo.setStyleSheet("background-color: rgb(36, 37, 130);")
        self.patient_logo.setText("")
        self.patient_logo.setPixmap(QtGui.QPixmap("Images/logo2.png"))
        self.patient_logo.setScaledContents(False)
        self.patient_logo.setObjectName("patient_logo")
        self.patient_welcome = QtWidgets.QLabel(self.patient_page)
        self.patient_welcome.setGeometry(QtCore.QRect(120, 190, 791, 81))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(20)
        font.setBold(True)
        font.setUnderline(False)
        font.setWeight(75)
        self.patient_welcome.setFont(font)
        self.patient_welcome.setStyleSheet("border :3px solid black;")
        self.patient_welcome.setObjectName("patient_welcome")
        self.patient_detailsline = QtWidgets.QLabel(self.patient_page)
        self.patient_detailsline.setGeometry(QtCore.QRect(220, 300, 581, 50))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(16)
        font.setBold(True)
        font.setUnderline(True)
        font.setWeight(75)
        self.patient_detailsline.setFont(font)
        self.patient_detailsline.setStyleSheet("")
        self.patient_detailsline.setObjectName("patient_detailsline")
        self.patient_form = QtWidgets.QWidget(self.patient_page)
        self.patient_form.setGeometry(QtCore.QRect(260, 360, 511, 191))
        self.patient_form.setStyleSheet("border : 2px solid black;")
        self.patient_form.setObjectName("patient_form")
        self.patient_name = QtWidgets.QLabel(self.patient_form)
        self.patient_name.setGeometry(QtCore.QRect(40, 40, 191, 31))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.patient_name.setFont(font)
        self.patient_name.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.patient_name.setObjectName("patient_name")
        self.patient_id = QtWidgets.QLabel(self.patient_form)
        self.patient_id.setGeometry(QtCore.QRect(40, 90, 191, 31))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.patient_id.setFont(font)
        self.patient_id.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.patient_id.setObjectName("patient_id")
        self.patient_contact = QtWidgets.QLabel(self.patient_form)
        self.patient_contact.setGeometry(QtCore.QRect(40, 140, 191, 31))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.patient_contact.setFont(font)
        self.patient_contact.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.patient_contact.setObjectName("patient_contact")
        self.patient_name_value = QtWidgets.QLineEdit(self.patient_form)
        self.patient_name_value.setGeometry(QtCore.QRect(290, 40, 171, 30))
        self.patient_name_value.setObjectName("patient_name_value")
        self.patient_id_value = QtWidgets.QLineEdit(self.patient_form)
        self.patient_id_value.setGeometry(QtCore.QRect(290, 90, 171, 30))
        self.patient_id_value.setObjectName("patient_id_value")
        self.patient_contact_value = QtWidgets.QLineEdit(self.patient_form)
        self.patient_contact_value.setGeometry(QtCore.QRect(290, 140, 171, 30))
        self.patient_contact_value.setObjectName("pantient_contact_value")
        self.patientsubmitbtn = QtWidgets.QPushButton(self.patient_page)
        self.patientsubmitbtn.setGeometry(QtCore.QRect(370, 590, 300, 50))
        self.patientsubmitbtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.patientsubmitbtn.setFont(font)
        self.patientsubmitbtn.setStyleSheet("background-color: rgb(36, 37, 130);\n"
"color:white;")
        self.patientsubmitbtn.setObjectName("patientsubmitbtn")
        self.patientsubmitbtn.clicked.connect(self.submit)
        self.stackedWidget.addWidget(self.patient_page)
        self.homescreen_page = QtWidgets.QWidget()
        self.homescreen_page.setObjectName("homescreen_page")
        self.logo = QtWidgets.QLabel(self.homescreen_page)
        self.logo.setGeometry(QtCore.QRect(0, 10, 200, 161))
        self.logo.setStyleSheet("background-color: rgb(36, 37, 130);")
        self.logo.setText("")
        self.logo.setPixmap(QtGui.QPixmap("Images/logo2.png"))
        self.logo.setObjectName("logo")
        self.coverpage = QtWidgets.QLabel(self.homescreen_page)
        self.coverpage.setGeometry(QtCore.QRect(-260, 0, 1671, 171))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(25)
        font.setBold(True)
        font.setWeight(75)
        self.coverpage.setFont(font)
        self.coverpage.setStyleSheet("background-color: rgb(36, 37, 130);\n"
"color:white;")
        self.coverpage.setAlignment(QtCore.Qt.AlignCenter)
        self.coverpage.setObjectName("coverpage")
        self.lung_Btn = QtWidgets.QPushButton(self.homescreen_page)
        self.lung_Btn.setGeometry(QtCore.QRect(720, 250, 292, 135))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(34)
        font.setBold(True)
        font.setWeight(75)
        self.lung_Btn.setFont(font)
        self.lung_Btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.lung_Btn.setStyleSheet(" border: 2px solid black;")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("Images/lungs.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.lung_Btn.setIcon(icon1)
        self.lung_Btn.setIconSize(QtCore.QSize(292, 90))
        self.lung_Btn.setObjectName("lung_Btn")
        self.covid_Btn = QtWidgets.QPushButton(self.homescreen_page)
        self.covid_Btn.setGeometry(QtCore.QRect(720, 500, 292, 135))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(26)
        font.setBold(True)
        font.setWeight(75)
        self.covid_Btn.setFont(font)
        self.covid_Btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.covid_Btn.setStyleSheet("border: 2px solid black;\n"
"\n"
"\n"
"")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("Images/covid.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.covid_Btn.setIcon(icon2)
        self.covid_Btn.setIconSize(QtCore.QSize(292, 70))
        self.covid_Btn.setObjectName("covid_Btn")
        self.blood_Btn = QtWidgets.QPushButton(self.homescreen_page)
        self.blood_Btn.setGeometry(QtCore.QRect(380, 500, 292, 135))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(34)
        font.setBold(True)
        font.setWeight(75)
        self.blood_Btn.setFont(font)
        self.blood_Btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.blood_Btn.setStyleSheet("border: 2px solid black;\n"
"\n"
"")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("Images/blood-donation-drop-32.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.blood_Btn.setIcon(icon3)
        self.blood_Btn.setIconSize(QtCore.QSize(292, 90))
        self.blood_Btn.setObjectName("blood_Btn")
        self.brain_Btn = QtWidgets.QPushButton(self.homescreen_page)
        self.brain_Btn.setGeometry(QtCore.QRect(40, 500, 292, 135))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(34)
        font.setBold(True)
        font.setWeight(75)
        self.brain_Btn.setFont(font)
        self.brain_Btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.brain_Btn.setStyleSheet("border: 2px solid black;\n"
"")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("Images/brain.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.brain_Btn.setIcon(icon4)
        self.brain_Btn.setIconSize(QtCore.QSize(292, 90))
        self.brain_Btn.setObjectName("brain_Btn")
        self.heart_Btn = QtWidgets.QPushButton(self.homescreen_page)
        self.heart_Btn.setGeometry(QtCore.QRect(40, 250, 292, 135))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(34)
        font.setBold(True)
        font.setWeight(75)
        self.heart_Btn.setFont(font)
        self.heart_Btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.heart_Btn.setStyleSheet("\n"
" border: 2px solid black;")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("Images/791184_heart_512x512.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.heart_Btn.setIcon(icon5)
        self.heart_Btn.setIconSize(QtCore.QSize(292, 90))
        self.heart_Btn.setObjectName("heart_Btn")
        self.diabetes_Btn = QtWidgets.QPushButton(self.homescreen_page)
        self.diabetes_Btn.setGeometry(QtCore.QRect(380, 250, 292, 135))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(28)
        font.setBold(True)
        font.setWeight(75)
        self.diabetes_Btn.setFont(font)
        self.diabetes_Btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.diabetes_Btn.setStyleSheet(" border: 2px solid black;\n"
"\n"
"\n"
" \n"
"")
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("Images/diabetes.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.diabetes_Btn.setIcon(icon6)
        self.diabetes_Btn.setIconSize(QtCore.QSize(292, 80))
        self.diabetes_Btn.setObjectName("diabetes_Btn")

        self.logoutbtn = QtWidgets.QPushButton(self.homescreen_page)
        self.logoutbtn.setObjectName(u"logoutbtn")
        self.logoutbtn.setGeometry(QtCore.QRect(1010, 10, 32, 32))
        self.logoutbtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.logoutbtn.setStyleSheet(u"background-color: rgb(36, 37, 130);")
        icon7 = QtGui.QIcon()
        icon7.addFile("Images/logout.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.logoutbtn.setIcon(icon7)
        self.logoutbtn.setIconSize(QtCore.QSize(32, 32))
        self.logoutbtn.setAutoDefault(False)
        self.logoutbtn.setFlat(True)
        self.logoutbtn.clicked.connect(self.logout)

        self.coverpage.raise_()
        self.logo.raise_()
        self.lung_Btn.raise_()
        self.covid_Btn.raise_()
        self.blood_Btn.raise_()
        self.brain_Btn.raise_()
        self.heart_Btn.raise_()
        self.diabetes_Btn.raise_()
        self.logoutbtn.raise_()
        self.stackedWidget.addWidget(self.homescreen_page)
        self.heart_page = QtWidgets.QWidget()
        self.heart_page.setObjectName("heart_page")
        self.heart_logo = QtWidgets.QLabel(self.heart_page)
        self.heart_logo.setGeometry(QtCore.QRect(20, 20, 131, 141))
        self.heart_logo.setAutoFillBackground(False)
        self.heart_logo.setStyleSheet("background-color: rgb(36, 37, 130)")
        self.heart_logo.setText("")
        self.heart_logo.setPixmap(QtGui.QPixmap("Images/791184_heart_512x512.png"))
        self.heart_logo.setScaledContents(True)
        self.heart_logo.setObjectName("heart_logo")
        self.heart_coverpage = QtWidgets.QLabel(self.heart_page)
        self.heart_coverpage.setGeometry(QtCore.QRect(-510, 0, 1921, 171))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(25)
        font.setBold(True)
        font.setWeight(75)
        self.heart_coverpage.setFont(font)
        self.heart_coverpage.setStyleSheet("background-color: rgb(36, 37, 130);\n"
"color:white;")
        self.heart_coverpage.setAlignment(QtCore.Qt.AlignCenter)
        self.heart_coverpage.setObjectName("heart_coverpage")
        self.heart_form = QtWidgets.QWidget(self.heart_page)
        self.heart_form.setGeometry(QtCore.QRect(10, 180, 611, 491))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.heart_form.setFont(font)
        self.heart_form.setStyleSheet("border : 2px solid black")
        self.heart_form.setObjectName("heart_form")
        self.heart_age = QtWidgets.QLabel(self.heart_form)
        self.heart_age.setGeometry(QtCore.QRect(20, 20, 250, 30))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.heart_age.setFont(font)
        self.heart_age.setObjectName("heart_age")
        self.heart_gender = QtWidgets.QLabel(self.heart_form)
        self.heart_gender.setGeometry(QtCore.QRect(20, 55, 250, 30))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.heart_gender.setFont(font)
        self.heart_gender.setObjectName("heart_gender")
        self.heart_chestpain = QtWidgets.QLabel(self.heart_form)
        self.heart_chestpain.setGeometry(QtCore.QRect(20, 90, 250, 30))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.heart_chestpain.setFont(font)
        self.heart_chestpain.setObjectName("heart_chestpain")
        self.heart_bp = QtWidgets.QLabel(self.heart_form)
        self.heart_bp.setGeometry(QtCore.QRect(20, 125, 250, 30))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.heart_bp.setFont(font)
        self.heart_bp.setObjectName("heart_bp")
        self.heart_sugar = QtWidgets.QLabel(self.heart_form)
        self.heart_sugar.setGeometry(QtCore.QRect(20, 195, 250, 30))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.heart_sugar.setFont(font)
        self.heart_sugar.setObjectName("heart_sugar")
        self.heart_angina = QtWidgets.QLabel(self.heart_form)
        self.heart_angina.setGeometry(QtCore.QRect(20, 300, 250, 30))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.heart_angina.setFont(font)
        self.heart_angina.setObjectName("heart_angina")
        self.heart_ecg = QtWidgets.QLabel(self.heart_form)
        self.heart_ecg.setGeometry(QtCore.QRect(20, 230, 250, 30))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.heart_ecg.setFont(font)
        self.heart_ecg.setObjectName("heart_ecg")
        self.heart_maxrate = QtWidgets.QLabel(self.heart_form)
        self.heart_maxrate.setGeometry(QtCore.QRect(20, 265, 250, 30))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.heart_maxrate.setFont(font)
        self.heart_maxrate.setObjectName("heart_maxrate")
        self.heart_cholestrol = QtWidgets.QLabel(self.heart_form)
        self.heart_cholestrol.setGeometry(QtCore.QRect(20, 160, 250, 30))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.heart_cholestrol.setFont(font)
        self.heart_cholestrol.setObjectName("heart_cholestrol")
        self.heart_oldpeak = QtWidgets.QLabel(self.heart_form)
        self.heart_oldpeak.setGeometry(QtCore.QRect(20, 335, 250, 30))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.heart_oldpeak.setFont(font)
        self.heart_oldpeak.setObjectName("heart_oldpeak")
        self.heart_slope = QtWidgets.QLabel(self.heart_form)
        self.heart_slope.setGeometry(QtCore.QRect(20, 370, 250, 30))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.heart_slope.setFont(font)
        self.heart_slope.setObjectName("heart_slope")
        self.heart_thalassemia = QtWidgets.QLabel(self.heart_form)
        self.heart_thalassemia.setGeometry(QtCore.QRect(20, 440, 250, 30))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.heart_thalassemia.setFont(font)
        self.heart_thalassemia.setObjectName("heart_thalassemia")
        self.heart_vessel = QtWidgets.QLabel(self.heart_form)
        self.heart_vessel.setGeometry(QtCore.QRect(20, 405, 250, 30))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.heart_vessel.setFont(font)
        self.heart_vessel.setObjectName("heart_vessel")
        self.heart_age_value = QtWidgets.QLineEdit(self.heart_form)
        self.heart_age_value.setGeometry(QtCore.QRect(320, 20, 250, 30))
        self.heart_age_value.setObjectName("heart_age_value")
        self.heart_chestpain_value = QtWidgets.QComboBox(self.heart_form)
        self.heart_chestpain_value.setGeometry(QtCore.QRect(320, 90, 250, 30))
        self.heart_chestpain_value.setObjectName("heart_chestpain_value")
        self.heart_chestpain_value.addItem("")
        self.heart_chestpain_value.addItem("")
        self.heart_chestpain_value.addItem("")
        self.heart_chestpain_value.addItem("")
        self.heart_bp_value = QtWidgets.QLineEdit(self.heart_form)
        self.heart_bp_value.setGeometry(QtCore.QRect(320, 125, 250, 30))
        self.heart_bp_value.setObjectName("heart_bp_value")
        self.heart_cholestrol_value = QtWidgets.QLineEdit(self.heart_form)
        self.heart_cholestrol_value.setGeometry(QtCore.QRect(320, 160, 250, 30))
        self.heart_cholestrol_value.setObjectName("heart_cholestrol_value")
        self.heart_ecg_yesbtn = QtWidgets.QRadioButton(self.heart_form)
        self.heart_ecg_yesbtn.setGeometry(QtCore.QRect(320, 230, 95, 30))
        self.heart_ecg_yesbtn.setObjectName("heart_ecg_yesbtn")
        self.heart_ecg_nobtn = QtWidgets.QRadioButton(self.heart_form)
        self.heart_ecg_nobtn.setGeometry(QtCore.QRect(440, 230, 95, 30))
        self.heart_ecg_nobtn.setObjectName("heart_ecg_nobtn")
        self.heart_maxrate_value = QtWidgets.QLineEdit(self.heart_form)
        self.heart_maxrate_value.setGeometry(QtCore.QRect(320, 265, 250, 30))
        self.heart_maxrate_value.setObjectName("heart_maxrate_value")
        self.heart_oldpeak_value = QtWidgets.QDoubleSpinBox(self.heart_form)
        self.heart_oldpeak_value.setGeometry(QtCore.QRect(320, 335, 250, 30))
        self.heart_oldpeak_value.setObjectName("heart_oldpeak_value")
        self.heart_slope_value = QtWidgets.QComboBox(self.heart_form)
        self.heart_slope_value.setGeometry(QtCore.QRect(320, 370, 250, 30))
        self.heart_slope_value.setObjectName("heart_slope_value")
        self.heart_slope_value.addItem("")
        self.heart_slope_value.addItem("")
        self.heart_slope_value.addItem("")
        self.heart_vessel_value = QtWidgets.QComboBox(self.heart_form)
        self.heart_vessel_value.setGeometry(QtCore.QRect(320, 402, 250, 30))
        self.heart_vessel_value.setObjectName("heart_vessel_value")
        self.heart_vessel_value.addItem("")
        self.heart_vessel_value.addItem("")
        self.heart_vessel_value.addItem("")
        self.heart_vessel_value.addItem("")
        self.heart_thalassemia_value = QtWidgets.QComboBox(self.heart_form)
        self.heart_thalassemia_value.setGeometry(QtCore.QRect(320, 440, 250, 30))
        self.heart_thalassemia_value.setObjectName("heart_thalassemia_value")
        self.heart_thalassemia_value.addItem("")
        self.heart_thalassemia_value.addItem("")
        self.heart_thalassemia_value.addItem("")
        self.gender_groupBox = QtWidgets.QGroupBox(self.heart_form)
        self.gender_groupBox.setGeometry(QtCore.QRect(320, 55, 250, 30))
        self.gender_groupBox.setStyleSheet("border:1px solid white")
        self.gender_groupBox.setTitle("")
        self.gender_groupBox.setObjectName("gender_groupBox")
        self.heart_gender_femalebtn = QtWidgets.QRadioButton(self.gender_groupBox)
        self.heart_gender_femalebtn.setGeometry(QtCore.QRect(120, 0, 95, 30))
        self.heart_gender_femalebtn.setStyleSheet("border : 2px solid black")
        self.heart_gender_femalebtn.setObjectName("heart_gender_femalebtn")
        self.heart_gender_malebtn = QtWidgets.QRadioButton(self.gender_groupBox)
        self.heart_gender_malebtn.setGeometry(QtCore.QRect(0, 0, 95, 30))
        self.heart_gender_malebtn.setStyleSheet("border :  2px solid black")
        self.heart_gender_malebtn.setObjectName("heart_gender_malebtn")
        self.angina_geoupbox = QtWidgets.QGroupBox(self.heart_form)
        self.angina_geoupbox.setGeometry(QtCore.QRect(320, 300, 250, 30))
        self.angina_geoupbox.setStyleSheet("border:1px solid white")
        self.angina_geoupbox.setTitle("")
        self.angina_geoupbox.setObjectName("angina_geoupbox")
        self.heart_angina_yesbtn = QtWidgets.QRadioButton(self.angina_geoupbox)
        self.heart_angina_yesbtn.setGeometry(QtCore.QRect(0, 0, 95, 30))
        self.heart_angina_yesbtn.setStyleSheet("border:2px solid black;")
        self.heart_angina_yesbtn.setObjectName("heart_angina_yesbtn")
        self.heart_angina_nobtn = QtWidgets.QRadioButton(self.angina_geoupbox)
        self.heart_angina_nobtn.setGeometry(QtCore.QRect(120, 0, 95, 30))
        self.heart_angina_nobtn.setStyleSheet("border:2px solid black;")
        self.heart_angina_nobtn.setObjectName("heart_angina_nobtn")
        self.sugar_groupbox = QtWidgets.QGroupBox(self.heart_form)
        self.sugar_groupbox.setGeometry(QtCore.QRect(320, 195, 250, 30))
        self.sugar_groupbox.setStyleSheet("border:1px solid white")
        self.sugar_groupbox.setTitle("")
        self.sugar_groupbox.setObjectName("sugar_groupbox")
        self.heart_sugar_yesbtn = QtWidgets.QRadioButton(self.sugar_groupbox)
        self.heart_sugar_yesbtn.setGeometry(QtCore.QRect(0, 0, 95, 30))
        self.heart_sugar_yesbtn.setStyleSheet("border:2px solid black;")
        self.heart_sugar_yesbtn.setObjectName("heart_sugar_yesbtn")
        self.heart_sugar_nobtn = QtWidgets.QRadioButton(self.sugar_groupbox)
        self.heart_sugar_nobtn.setGeometry(QtCore.QRect(120, 0, 95, 30))
        self.heart_sugar_nobtn.setStyleSheet("border:2px solid black;")
        self.heart_sugar_nobtn.setObjectName("heart_sugar_nobtn")
        self.sugar_groupbox.raise_()
        self.angina_geoupbox.raise_()
        self.gender_groupBox.raise_()
        self.heart_age.raise_()
        self.heart_gender.raise_()
        self.heart_chestpain.raise_()
        self.heart_bp.raise_()
        self.heart_sugar.raise_()
        self.heart_angina.raise_()
        self.heart_ecg.raise_()
        self.heart_maxrate.raise_()
        self.heart_cholestrol.raise_()
        self.heart_oldpeak.raise_()
        self.heart_slope.raise_()
        self.heart_thalassemia.raise_()
        self.heart_vessel.raise_()
        self.heart_age_value.raise_()
        self.heart_chestpain_value.raise_()
        self.heart_bp_value.raise_()
        self.heart_cholestrol_value.raise_()
        self.heart_ecg_yesbtn.raise_()
        self.heart_ecg_nobtn.raise_()
        self.heart_maxrate_value.raise_()
        self.heart_oldpeak_value.raise_()
        self.heart_slope_value.raise_()
        self.heart_vessel_value.raise_()
        self.heart_thalassemia_value.raise_()
        self.heart_genreport = QtWidgets.QPushButton(self.heart_page)
        self.heart_genreport.setGeometry(QtCore.QRect(710, 410, 300, 50))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.heart_genreport.setFont(font)
        self.heart_genreport.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.heart_genreport.setStyleSheet("background-color:red;\n"
"color:white;")
        self.heart_genreport.setObjectName("heart_genreport")
        self.heart_genreport.clicked.connect(self.heartreport)
        self.heart_classifybtn = QtWidgets.QPushButton(self.heart_page)
        self.heart_classifybtn.setGeometry(QtCore.QRect(710, 310, 300, 50))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.heart_classifybtn.setFont(font)
        self.heart_classifybtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.heart_classifybtn.setStyleSheet("background-color:red;\n"
"color:white;")
        self.heart_classifybtn.setObjectName("heart_classify")
        self.heart_classifybtn.clicked.connect(self.heart_classify)
        self.heart_homescreenbtn = QtWidgets.QPushButton(self.heart_page)
        self.heart_homescreenbtn.setGeometry(QtCore.QRect(710, 510, 300, 50))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.heart_homescreenbtn.setFont(font)
        self.heart_homescreenbtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.heart_homescreenbtn.setStyleSheet("background-color:red;\n"
"color:white;")
        self.heart_homescreenbtn.setObjectName("heart_homescreenbtn")
        self.heart_coverpage.raise_()
        self.heart_logo.raise_()
        self.heart_form.raise_()
        self.heart_genreport.raise_()
        self.heart_classifybtn.raise_()
        self.heart_homescreenbtn.raise_()
        self.stackedWidget.addWidget(self.heart_page)
        self.diabetes_page = QtWidgets.QWidget()
        self.diabetes_page.setObjectName("diabetes_page")
        self.diabetes_logo = QtWidgets.QLabel(self.diabetes_page)
        self.diabetes_logo.setGeometry(QtCore.QRect(30, 20, 131, 131))
        self.diabetes_logo.setStyleSheet("background-color: rgb(36, 37, 130);")
        self.diabetes_logo.setText("")
        self.diabetes_logo.setPixmap(QtGui.QPixmap("Images/diabetes.png"))
        self.diabetes_logo.setScaledContents(True)
        self.diabetes_logo.setObjectName("diabetes_logo")
        self.diabetes_coverpage = QtWidgets.QLabel(self.diabetes_page)
        self.diabetes_coverpage.setGeometry(QtCore.QRect(-510, 0, 1911, 171))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(25)
        font.setBold(True)
        font.setWeight(75)
        self.diabetes_coverpage.setFont(font)
        self.diabetes_coverpage.setStyleSheet("background-color: rgb(36, 37, 130);\n"
"color:white;")
        self.diabetes_coverpage.setAlignment(QtCore.Qt.AlignCenter)
        self.diabetes_coverpage.setObjectName("diabetes_coverpage")
        self.diabetes_form = QtWidgets.QWidget(self.diabetes_page)
        self.diabetes_form.setGeometry(QtCore.QRect(20, 270, 611, 361))
        self.diabetes_form.setStyleSheet("border : 2px solid black")
        self.diabetes_form.setObjectName("diabetes_form")
        self.diabtes_pregnancies = QtWidgets.QLabel(self.diabetes_form)
        self.diabtes_pregnancies.setGeometry(QtCore.QRect(20, 20, 250, 30))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.diabtes_pregnancies.setFont(font)
        self.diabtes_pregnancies.setObjectName("diabtes_pregnancies")
        self.diabetes_glucose = QtWidgets.QLabel(self.diabetes_form)
        self.diabetes_glucose.setGeometry(QtCore.QRect(20, 60, 250, 30))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.diabetes_glucose.setFont(font)
        self.diabetes_glucose.setObjectName("diabetes_glucose")
        self.diabetes_bp = QtWidgets.QLabel(self.diabetes_form)
        self.diabetes_bp.setGeometry(QtCore.QRect(20, 100, 250, 30))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.diabetes_bp.setFont(font)
        self.diabetes_bp.setObjectName("diabetes_bp")
        self.diabetes_skin = QtWidgets.QLabel(self.diabetes_form)
        self.diabetes_skin.setGeometry(QtCore.QRect(20, 140, 250, 30))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.diabetes_skin.setFont(font)
        self.diabetes_skin.setObjectName("diabetes_skin")
        self.diabetes_insulin = QtWidgets.QLabel(self.diabetes_form)
        self.diabetes_insulin.setGeometry(QtCore.QRect(20, 220, 250, 30))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.diabetes_insulin.setFont(font)
        self.diabetes_insulin.setObjectName("diabetes_insulin")
        self.diabetes_pedigree = QtWidgets.QLabel(self.diabetes_form)
        self.diabetes_pedigree.setGeometry(QtCore.QRect(20, 260, 250, 30))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.diabetes_pedigree.setFont(font)
        self.diabetes_pedigree.setObjectName("diabetes_pedigree")
        self.diabetes_age = QtWidgets.QLabel(self.diabetes_form)
        self.diabetes_age.setGeometry(QtCore.QRect(20, 300, 250, 30))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.diabetes_age.setFont(font)
        self.diabetes_age.setObjectName("diabetes_age")
        self.diabetes_bmi = QtWidgets.QLabel(self.diabetes_form)
        self.diabetes_bmi.setGeometry(QtCore.QRect(20, 180, 250, 30))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.diabetes_bmi.setFont(font)
        self.diabetes_bmi.setObjectName("diabetes_bmi")
        self.diabetes_pregnancies_value = QtWidgets.QLineEdit(self.diabetes_form)
        self.diabetes_pregnancies_value.setGeometry(QtCore.QRect(320, 20, 250, 30))
        self.diabetes_pregnancies_value.setObjectName("diabetes_pregnancies_value")
        self.diabetes_skin_value = QtWidgets.QLineEdit(self.diabetes_form)
        self.diabetes_skin_value.setGeometry(QtCore.QRect(320, 140, 250, 30))
        self.diabetes_skin_value.setObjectName("diabetes_skin_value")
        self.diabetes_bmi_value = QtWidgets.QLineEdit(self.diabetes_form)
        self.diabetes_bmi_value.setGeometry(QtCore.QRect(320, 180, 250, 30))
        self.diabetes_bmi_value.setObjectName("diabetes_bmi_value")
        self.diabetes_age_value = QtWidgets.QLineEdit(self.diabetes_form)
        self.diabetes_age_value.setGeometry(QtCore.QRect(320, 300, 250, 30))
        self.diabetes_age_value.setObjectName("diabetes_age_value")
        self.diabetes_glucose_value = QtWidgets.QLineEdit(self.diabetes_form)
        self.diabetes_glucose_value.setGeometry(QtCore.QRect(320, 60, 250, 30))
        self.diabetes_glucose_value.setObjectName("diabetes_glucose_value")
        self.diabetes_bp_value = QtWidgets.QLineEdit(self.diabetes_form)
        self.diabetes_bp_value.setGeometry(QtCore.QRect(320, 100, 250, 30))
        self.diabetes_bp_value.setObjectName("diabetes_bp_value")
        self.diabetes_insulin_value = QtWidgets.QLineEdit(self.diabetes_form)
        self.diabetes_insulin_value.setGeometry(QtCore.QRect(320, 220, 250, 30))
        self.diabetes_insulin_value.setObjectName("diabetes_insulin_value")
        self.diabetes_pedigree_value = QtWidgets.QLineEdit(self.diabetes_form)
        self.diabetes_pedigree_value.setGeometry(QtCore.QRect(320, 260, 250, 30))
        self.diabetes_pedigree_value.setObjectName("diabetes_pedigree_value")
        self.diabetes_genreport = QtWidgets.QPushButton(self.diabetes_page)
        self.diabetes_genreport.setGeometry(QtCore.QRect(710, 410, 300, 50))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.diabetes_genreport.setFont(font)
        self.diabetes_genreport.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.diabetes_genreport.setStyleSheet("background-color:red;\n"
"color:white;")
        self.diabetes_genreport.setObjectName("diabetes_genreport")
        self.diabetes_genreport.clicked.connect(self.diabetesreport)
        self.diabetes_classifybtn = QtWidgets.QPushButton(self.diabetes_page)
        self.diabetes_classifybtn.setGeometry(QtCore.QRect(710, 310, 300, 50))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.diabetes_classifybtn.setFont(font)
        self.diabetes_classifybtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.diabetes_classifybtn.setStyleSheet("background-color:red;\n"
"color:white;")
        self.diabetes_classifybtn.setObjectName("diabetes_classify")
        self.diabetes_classifybtn.clicked.connect(self.diabetes_classify)
        self.diabetes_homescreenbtn = QtWidgets.QPushButton(self.diabetes_page)
        self.diabetes_homescreenbtn.setGeometry(QtCore.QRect(710, 510, 300, 50))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.diabetes_homescreenbtn.setFont(font)
        self.diabetes_homescreenbtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.diabetes_homescreenbtn.setStyleSheet("background-color:red;\n"
"color:white;")
        self.diabetes_homescreenbtn.setObjectName("diabetes_homescreenbtn")
        self.covid_cough_4 = QtWidgets.QLabel(self.diabetes_page)
        self.covid_cough_4.setGeometry(QtCore.QRect(20, 190, 350, 50))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(26)
        font.setBold(True)
        font.setWeight(75)
        self.covid_cough_4.setFont(font)
        self.covid_cough_4.setObjectName("covid_cough_4")
        self.diabetes_coverpage.raise_()
        self.diabetes_logo.raise_()
        self.diabetes_form.raise_()
        self.diabetes_genreport.raise_()
        self.diabetes_classifybtn.raise_()
        self.diabetes_homescreenbtn.raise_()
        self.covid_cough_4.raise_()
        self.stackedWidget.addWidget(self.diabetes_page)
        self.lung_page = QtWidgets.QWidget()
        self.lung_page.setObjectName("lung_page")
        self.lung_logo = QtWidgets.QLabel(self.lung_page)
        self.lung_logo.setGeometry(QtCore.QRect(30, 10, 131, 141))
        self.lung_logo.setStyleSheet("background-color: rgb(36, 37, 130);\n"
"")
        self.lung_logo.setText("")
        self.lung_logo.setPixmap(QtGui.QPixmap("Images/lungs.png"))
        self.lung_logo.setScaledContents(True)
        self.lung_logo.setObjectName("lung_logo")
        self.lung_coverpage = QtWidgets.QLabel(self.lung_page)
        self.lung_coverpage.setGeometry(QtCore.QRect(-590, -10, 2021, 171))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(25)
        font.setBold(True)
        font.setWeight(75)
        self.lung_coverpage.setFont(font)
        self.lung_coverpage.setStyleSheet("background-color: rgb(36, 37, 130);\n"
"color:white;")
        self.lung_coverpage.setAlignment(QtCore.Qt.AlignCenter)
        self.lung_coverpage.setObjectName("lung_coverpage")
        self.lung_browsebtn = QtWidgets.QPushButton(self.lung_page)
        self.lung_browsebtn.setGeometry(QtCore.QRect(120, 250, 350, 50))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.lung_browsebtn.setFont(font)
        self.lung_browsebtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.lung_browsebtn.setStyleSheet("background-color:red;\n"
"color:white;")
        self.lung_browsebtn.setObjectName("lung_browsebtn")
        self.lung_browsebtn.clicked.connect(self.lungfilebrowser)
        self.lung_imglbl = QtWidgets.QLabel(self.lung_page)
        self.lung_imglbl.setGeometry(QtCore.QRect(170, 390, 256, 256))
        self.lung_imglbl.setStyleSheet("border : 1px solid black")
        self.lung_imglbl.setText("")
        self.lung_imglbl.setScaledContents(True)
        self.lung_imglbl.setObjectName("lung_imglbl")
        self.lung_seperator = QtWidgets.QLabel(self.lung_page)
        self.lung_seperator.setGeometry(QtCore.QRect(600, 200, 2, 600))
        self.lung_seperator.setStyleSheet("border : 1px solid black ;")
        self.lung_seperator.setText("")
        self.lung_seperator.setObjectName("lung_seperator")
        self.lung_classifybtn = QtWidgets.QPushButton(self.lung_page)
        self.lung_classifybtn.setGeometry(QtCore.QRect(710, 310, 300, 50))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.lung_classifybtn.setFont(font)
        self.lung_classifybtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.lung_classifybtn.setStyleSheet("background-color:red;\n"
"color:white;")
        self.lung_classifybtn.setObjectName("lung_classify")
        self.lung_classifybtn.clicked.connect(self.lung_classify)
        self.lung_homescreenbtn = QtWidgets.QPushButton(self.lung_page)
        self.lung_homescreenbtn.setGeometry(QtCore.QRect(710, 510, 300, 50))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.lung_homescreenbtn.setFont(font)
        self.lung_homescreenbtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.lung_homescreenbtn.setStyleSheet("background-color:red;\n"
"color:white;")
        self.lung_homescreenbtn.setObjectName("lung_homescreenbtn")
        self.lung_genreport = QtWidgets.QPushButton(self.lung_page)
        self.lung_genreport.setGeometry(QtCore.QRect(710, 410, 300, 50))
        self.lung_genreport.clicked.connect(self.lungreport)
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.lung_genreport.setFont(font)
        self.lung_genreport.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.lung_genreport.setStyleSheet("background-color:red;\n"
"color:white;")
        self.lung_genreport.setObjectName("lung_genreport")
        self.lung_coverpage.raise_()
        self.lung_logo.raise_()
        self.lung_browsebtn.raise_()
        self.lung_imglbl.raise_()
        self.lung_seperator.raise_()
        self.lung_classifybtn.raise_()
        self.lung_homescreenbtn.raise_()
        self.lung_genreport.raise_()
        self.stackedWidget.addWidget(self.lung_page)
        self.brain_page = QtWidgets.QWidget()
        self.brain_page.setObjectName("brain_page")
        self.brain_coverpage = QtWidgets.QLabel(self.brain_page)
        self.brain_coverpage.setGeometry(QtCore.QRect(-450, 0, 1901, 171))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(25)
        font.setBold(True)
        font.setWeight(75)
        self.brain_coverpage.setFont(font)
        self.brain_coverpage.setStyleSheet("background-color: rgb(36, 37, 130);\n"
"color:white;")
        self.brain_coverpage.setAlignment(QtCore.Qt.AlignCenter)
        self.brain_coverpage.setObjectName("brain_coverpage")
        self.brain_browsebtn = QtWidgets.QPushButton(self.brain_page)
        self.brain_browsebtn.setGeometry(QtCore.QRect(120, 250, 350, 50))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.brain_browsebtn.setFont(font)
        self.brain_browsebtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.brain_browsebtn.setStyleSheet("background-color:red;\n"
"color:white;")
        self.brain_browsebtn.setObjectName("brain_browsebtn")
        self.brain_browsebtn.clicked.connect(self.brainfilebrowser)
        self.brain_genreport = QtWidgets.QPushButton(self.brain_page)
        self.brain_genreport.setGeometry(QtCore.QRect(710, 410, 300, 50))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.brain_genreport.setFont(font)
        self.brain_genreport.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.brain_genreport.setStyleSheet("background-color:red;\n"
"color:white;")
        self.brain_genreport.setObjectName("brain_genreport")
        self.brain_genreport.clicked.connect(self.brainreport)
        self.brain_classifybtn = QtWidgets.QPushButton(self.brain_page)
        self.brain_classifybtn.setGeometry(QtCore.QRect(710, 310, 300, 50))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.brain_classifybtn.setFont(font)
        self.brain_classifybtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.brain_classifybtn.setStyleSheet("background-color:red;\n"
"color:white;")
        self.brain_classifybtn.setObjectName("brain_classify")
        self.brain_classifybtn.clicked.connect(self.brain_classify)
        self.brain_imglbl = QtWidgets.QLabel(self.brain_page)
        self.brain_imglbl.setGeometry(QtCore.QRect(170, 390, 256, 256))
        self.brain_imglbl.setStyleSheet("border : 1px solid black")
        self.brain_imglbl.setText("")
        self.brain_imglbl.setScaledContents(True)
        self.brain_imglbl.setObjectName("brain_imglbl")
        self.brain_homescreenbtn = QtWidgets.QPushButton(self.brain_page)
        self.brain_homescreenbtn.setGeometry(QtCore.QRect(710, 510, 300, 50))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.brain_homescreenbtn.setFont(font)
        self.brain_homescreenbtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.brain_homescreenbtn.setStyleSheet("background-color:red;\n"
"color:white;")
        self.brain_homescreenbtn.setObjectName("brain_homescreenbtn")
        self.brain_seperator = QtWidgets.QLabel(self.brain_page)
        self.brain_seperator.setGeometry(QtCore.QRect(600, 200, 2, 560))
        self.brain_seperator.setStyleSheet("border : 1px solid black ;")
        self.brain_seperator.setText("")
        self.brain_seperator.setObjectName("brain_seperator")
        self.brain_logo = QtWidgets.QLabel(self.brain_page)
        self.brain_logo.setGeometry(QtCore.QRect(10, 0, 161, 171))
        self.brain_logo.setStyleSheet("background-color: rgb(36, 37, 130);\n"
"")
        self.brain_logo.setText("")
        self.brain_logo.setPixmap(QtGui.QPixmap("Images/brain.png"))
        self.brain_logo.setScaledContents(True)
        self.brain_logo.setObjectName("brain_logo")
        self.stackedWidget.addWidget(self.brain_page)
        self.blood_page = QtWidgets.QWidget()
        self.blood_page.setObjectName("blood_page")
        self.blood_classifybtn = QtWidgets.QPushButton(self.blood_page)
        self.blood_classifybtn.setGeometry(QtCore.QRect(710, 310, 300, 50))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.blood_classifybtn.setFont(font)
        self.blood_classifybtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.blood_classifybtn.setStyleSheet("background-color:red;\n"
"color:white;")
        self.blood_classifybtn.setObjectName("blood_classify")
        self.blood_classifybtn.clicked.connect(self.blood_classify)
        self.blood_homescreenbtn = QtWidgets.QPushButton(self.blood_page)
        self.blood_homescreenbtn.setGeometry(QtCore.QRect(710, 510, 300, 50))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.blood_homescreenbtn.setFont(font)
        self.blood_homescreenbtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.blood_homescreenbtn.setStyleSheet("background-color:red;\n"
"color:white;")
        self.blood_homescreenbtn.setObjectName("blood_homescreenbtn")
        self.blood_browsebtn = QtWidgets.QPushButton(self.blood_page)
        self.blood_browsebtn.setGeometry(QtCore.QRect(120, 250, 350, 50))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.blood_browsebtn.setFont(font)
        self.blood_browsebtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.blood_browsebtn.setStyleSheet("background-color:red;\n"
"color:white;")
        self.blood_browsebtn.setObjectName("blood_browsebtn")
        self.blood_browsebtn.clicked.connect(self.bloodfilebrowser)
        self.blood_genreport = QtWidgets.QPushButton(self.blood_page)
        self.blood_genreport.setGeometry(QtCore.QRect(710, 410, 300, 50))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.blood_genreport.setFont(font)
        self.blood_genreport.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.blood_genreport.setStyleSheet("background-color:red;\n"
"color:white;")
        self.blood_genreport.setObjectName("blood_genreport")
        self.blood_genreport.clicked.connect(self.bloodreport)
        self.blood_seperator = QtWidgets.QLabel(self.blood_page)
        self.blood_seperator.setGeometry(QtCore.QRect(600, 200, 2, 560))
        self.blood_seperator.setStyleSheet("border : 1px solid black ;")
        self.blood_seperator.setText("")
        self.blood_seperator.setObjectName("blood_seperator")
        self.blood_imglbl = QtWidgets.QLabel(self.blood_page)
        self.blood_imglbl.setGeometry(QtCore.QRect(170, 390, 256, 256))
        self.blood_imglbl.setStyleSheet("border : 1px solid black")
        self.blood_imglbl.setText("")
        self.blood_imglbl.setScaledContents(True)
        self.blood_imglbl.setObjectName("blood_imglbl")
        self.blood_logo = QtWidgets.QLabel(self.blood_page)
        self.blood_logo.setGeometry(QtCore.QRect(30, 20, 141, 151))
        self.blood_logo.setStyleSheet("background-color: rgb(36, 37, 130);\n"
"")
        self.blood_logo.setText("")
        self.blood_logo.setPixmap(QtGui.QPixmap("Images/blood-donation-drop-32.png"))
        self.blood_logo.setScaledContents(True)
        self.blood_logo.setObjectName("blood_logo")
        self.blood_coverpage = QtWidgets.QLabel(self.blood_page)
        self.blood_coverpage.setGeometry(QtCore.QRect(-520, 0, 1921, 171))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(25)
        font.setBold(True)
        font.setWeight(75)
        self.blood_coverpage.setFont(font)
        self.blood_coverpage.setStyleSheet("background-color: rgb(36, 37, 130);\n"
"color:white;")
        self.blood_coverpage.setAlignment(QtCore.Qt.AlignCenter)
        self.blood_coverpage.setObjectName("blood_coverpage")
        self.blood_coverpage.raise_()
        self.blood_classifybtn.raise_()
        self.blood_homescreenbtn.raise_()
        self.blood_browsebtn.raise_()
        self.blood_genreport.raise_()
        self.blood_seperator.raise_()
        self.blood_imglbl.raise_()
        self.blood_logo.raise_()
        self.stackedWidget.addWidget(self.blood_page)
        self.covid_page = QtWidgets.QWidget()
        self.covid_page.setObjectName("covid_page")
        self.covid_logo = QtWidgets.QLabel(self.covid_page)
        self.covid_logo.setGeometry(QtCore.QRect(20, 10, 141, 141))
        self.covid_logo.setAutoFillBackground(False)
        self.covid_logo.setStyleSheet("background-color: rgb(36, 37, 130)")
        self.covid_logo.setText("")
        self.covid_logo.setPixmap(QtGui.QPixmap("Images/covid.png"))
        self.covid_logo.setScaledContents(True)
        self.covid_logo.setObjectName("covid_logo")
        self.covid_coverpage = QtWidgets.QLabel(self.covid_page)
        self.covid_coverpage.setGeometry(QtCore.QRect(-500, 0, 1921, 171))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(25)
        font.setBold(True)
        font.setWeight(75)
        self.covid_coverpage.setFont(font)
        self.covid_coverpage.setStyleSheet("background-color: rgb(36, 37, 130);\n"
"color:white;")
        self.covid_coverpage.setAlignment(QtCore.Qt.AlignCenter)
        self.covid_coverpage.setObjectName("covid_coverpage")
        self.covid_form = QtWidgets.QWidget(self.covid_page)
        self.covid_form.setGeometry(QtCore.QRect(20, 270, 591, 341))
        self.covid_form.setStyleSheet("border : 2px solid black")
        self.covid_form.setObjectName("covid_form")
        self.covid_cough = QtWidgets.QLabel(self.covid_form)
        self.covid_cough.setGeometry(QtCore.QRect(20, 20, 250, 50))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.covid_cough.setFont(font)
        self.covid_cough.setObjectName("covid_cough")
        self.covid_fever = QtWidgets.QLabel(self.covid_form)
        self.covid_fever.setGeometry(QtCore.QRect(20, 100, 250, 50))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.covid_fever.setFont(font)
        self.covid_fever.setObjectName("covid_fever")
        self.covid_throat = QtWidgets.QLabel(self.covid_form)
        self.covid_throat.setGeometry(QtCore.QRect(20, 180, 250, 50))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.covid_throat.setFont(font)
        self.covid_throat.setObjectName("covid_throat")
        self.covid_breathing = QtWidgets.QLabel(self.covid_form)
        self.covid_breathing.setGeometry(QtCore.QRect(20, 260, 250, 50))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.covid_breathing.setFont(font)
        self.covid_breathing.setObjectName("covid_breathing")
        self.covid_cough_value = QtWidgets.QLineEdit(self.covid_form)
        self.covid_cough_value.setGeometry(QtCore.QRect(320, 20, 250, 50))
        self.covid_cough_value.setObjectName("covid_cough_value")
        self.covid_breathing_value = QtWidgets.QLineEdit(self.covid_form)
        self.covid_breathing_value.setGeometry(QtCore.QRect(320, 260, 250, 50))
        self.covid_breathing_value.setObjectName("covid_breathing_value")
        self.covid_fever_value = QtWidgets.QLineEdit(self.covid_form)
        self.covid_fever_value.setGeometry(QtCore.QRect(320, 100, 250, 50))
        self.covid_fever_value.setObjectName("covid_fever_value")
        self.covid_throat_value = QtWidgets.QLineEdit(self.covid_form)
        self.covid_throat_value.setGeometry(QtCore.QRect(320, 180, 250, 50))
        self.covid_throat_value.setObjectName("covid_throat_value")
        self.covid_genreport = QtWidgets.QPushButton(self.covid_page)
        self.covid_genreport.setGeometry(QtCore.QRect(710, 410, 300, 50))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.covid_genreport.setFont(font)
        self.covid_genreport.setCursor(QtGui.QCursor(QtCore.Qt.ForbiddenCursor))
        self.covid_genreport.setStyleSheet("background-color:grey;\n"
"color:white;")
        self.covid_genreport.setObjectName("covid_genreport")
        self.covid_homescreenbtn = QtWidgets.QPushButton(self.covid_page)
        self.covid_homescreenbtn.setGeometry(QtCore.QRect(710, 510, 300, 50))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.covid_homescreenbtn.setFont(font)
        self.covid_homescreenbtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.covid_homescreenbtn.setStyleSheet("background-color:red;\n"
"color:white;")
        self.covid_homescreenbtn.setObjectName("covid_homescreenbtn")
        self.covid_classifybtn = QtWidgets.QPushButton(self.covid_page)
        self.covid_classifybtn.setGeometry(QtCore.QRect(710, 310, 300, 50))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.covid_classifybtn.setFont(font)
        self.covid_classifybtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.covid_classifybtn.setStyleSheet("background-color:red;\n"
"color:white;")
        self.covid_classifybtn.setObjectName("covid_classify")
        self.covid_classifybtn.clicked.connect(self.covid_classify)
        self.covid_enterdetaulslbl = QtWidgets.QLabel(self.covid_page)
        self.covid_enterdetaulslbl.setGeometry(QtCore.QRect(20, 190, 350, 50))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(26)
        font.setBold(True)
        font.setWeight(75)
        self.covid_enterdetaulslbl.setFont(font)
        self.covid_enterdetaulslbl.setObjectName("covid_enterdetaulslbl")
        self.covid_notice = QtWidgets.QLabel(self.covid_page)
        self.covid_notice.setGeometry(QtCore.QRect(30, 630, 371, 50))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.covid_notice.setFont(font)
        self.covid_notice.setObjectName("covid_notice")
        self.covid_coverpage.raise_()
        self.covid_logo.raise_()
        self.covid_form.raise_()
        self.covid_genreport.raise_()
        self.covid_homescreenbtn.raise_()
        self.covid_classifybtn.raise_()
        self.covid_enterdetaulslbl.raise_()
        self.covid_notice.raise_()
        self.stackedWidget.addWidget(self.covid_page)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.stackedWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # Button Links
        self.heart_Btn.clicked.connect(lambda: self.stackedWidget.setCurrentWidget(self.heart_page))
        self.heart_homescreenbtn.clicked.connect(lambda: self.stackedWidget.setCurrentWidget(self.homescreen_page))
        self.diabetes_Btn.clicked.connect(lambda: self.stackedWidget.setCurrentWidget(self.diabetes_page))
        self.diabetes_homescreenbtn.clicked.connect(lambda: self.stackedWidget.setCurrentWidget(self.homescreen_page))
        self.brain_Btn.clicked.connect(lambda: self.stackedWidget.setCurrentWidget(self.brain_page))
        self.brain_homescreenbtn.clicked.connect(lambda: self.stackedWidget.setCurrentWidget(self.homescreen_page))
        self.lung_Btn.clicked.connect(lambda: self.stackedWidget.setCurrentWidget(self.lung_page))
        self.lung_homescreenbtn.clicked.connect(lambda: self.stackedWidget.setCurrentWidget(self.homescreen_page))
        self.blood_Btn.clicked.connect(lambda: self.stackedWidget.setCurrentWidget(self.blood_page))
        self.blood_homescreenbtn.clicked.connect(lambda: self.stackedWidget.setCurrentWidget(self.homescreen_page))
        self.covid_Btn.clicked.connect(lambda: self.stackedWidget.setCurrentWidget(self.covid_page))
        self.covid_homescreenbtn.clicked.connect(lambda: self.stackedWidget.setCurrentWidget(self.homescreen_page))
        #self.patientsubmitbtn.clicked.connect(lambda: self.stackedWidget.setCurrentWidget(self.homescreen_page))

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Health Assistance Expert System"))
        self.patient_coverpage.setText(_translate("MainWindow", "HEALTH ASSISTANCE EXPERT SYSTEM"))
        self.patient_welcome.setText(_translate("MainWindow", "WELCOME TO HEALTH ASSISTANCE EXPERT SYSTEM"))
        self.patient_detailsline.setText(_translate("MainWindow", "PLEASE ENTER PATIENT DETAILS TO CONTINUE"))
        self.patient_name.setText(_translate("MainWindow", "PATIENT NAME "))
        self.patient_id.setText(_translate("MainWindow", "PATIENT ID "))
        self.patient_contact.setText(_translate("MainWindow", "PATIENT CONTACT"))
        self.patientsubmitbtn.setText(_translate("MainWindow", "SUBMIT"))
        self.coverpage.setText(_translate("MainWindow", "HEALTH ASSISTANCE EXPERT SYSTEM"))
        self.lung_Btn.setText(_translate("MainWindow", "LUNG"))
        self.covid_Btn.setText(_translate("MainWindow", "COVID-19"))
        self.blood_Btn.setText(_translate("MainWindow", "BLOOD"))
        self.brain_Btn.setText(_translate("MainWindow", "BRAIN"))
        self.heart_Btn.setText(_translate("MainWindow", "HEART"))
        self.diabetes_Btn.setText(_translate("MainWindow", "DIABETES"))
        self.heart_coverpage.setText(_translate("MainWindow", "HEART RISK PREDICTION"))
        self.heart_age.setText(_translate("MainWindow", "AGE"))
        self.heart_gender.setText(_translate("MainWindow", "GENDER"))
        self.heart_chestpain.setText(_translate("MainWindow", "CHEST PAIN"))
        self.heart_bp.setText(_translate("MainWindow", "REST B.P."))
        self.heart_sugar.setText(_translate("MainWindow", "FAST SUGAR"))
        self.heart_angina.setText(_translate("MainWindow", "EXERCISE INDUCED ANGINA"))
        self.heart_ecg.setText(_translate("MainWindow", "REST ECG"))
        self.heart_maxrate.setText(_translate("MainWindow", "MAX HEART RATE"))
        self.heart_cholestrol.setText(_translate("MainWindow", "CHOLESTROL"))
        self.heart_oldpeak.setText(_translate("MainWindow", "OLD PEAK"))
        self.heart_slope.setText(_translate("MainWindow", "SLOPE"))
        self.heart_thalassemia.setText(_translate("MainWindow", "THALASSEMIA"))
        self.heart_vessel.setText(_translate("MainWindow", "MAJOR VESSELS IN TEST"))
        self.heart_chestpain_value.setItemText(0, _translate("MainWindow", "ASYMPTOTIC"))
        self.heart_chestpain_value.setItemText(1, _translate("MainWindow", "ATYPICAL"))
        self.heart_chestpain_value.setItemText(2, _translate("MainWindow", "NON ANGINA"))
        self.heart_chestpain_value.setItemText(3, _translate("MainWindow", "TYPICAL"))
        self.heart_ecg_yesbtn.setText(_translate("MainWindow", "YES"))
        self.heart_ecg_nobtn.setText(_translate("MainWindow", "NO"))
        self.heart_slope_value.setItemText(0, _translate("MainWindow", "0"))
        self.heart_slope_value.setItemText(1, _translate("MainWindow", "1"))
        self.heart_slope_value.setItemText(2, _translate("MainWindow", "2"))
        self.heart_vessel_value.setItemText(0, _translate("MainWindow", "0"))
        self.heart_vessel_value.setItemText(1, _translate("MainWindow", "1"))
        self.heart_vessel_value.setItemText(2, _translate("MainWindow", "2"))
        self.heart_vessel_value.setItemText(3, _translate("MainWindow", "3"))
        self.heart_thalassemia_value.setItemText(0, _translate("MainWindow", "1"))
        self.heart_thalassemia_value.setItemText(1, _translate("MainWindow", "2"))
        self.heart_thalassemia_value.setItemText(2, _translate("MainWindow", "3"))
        self.heart_gender_femalebtn.setText(_translate("MainWindow", "FEMALE"))
        self.heart_gender_malebtn.setText(_translate("MainWindow", "MALE"))
        self.heart_angina_yesbtn.setText(_translate("MainWindow", "YES"))
        self.heart_angina_nobtn.setText(_translate("MainWindow", "NO"))
        self.heart_sugar_yesbtn.setText(_translate("MainWindow", "YES"))
        self.heart_sugar_nobtn.setText(_translate("MainWindow", "NO"))
        self.heart_genreport.setText(_translate("MainWindow", "GENERATE REPORT"))
        self.heart_classifybtn.setText(_translate("MainWindow", "CLASSIFY"))
        self.heart_homescreenbtn.setText(_translate("MainWindow", "BACK TO HOME SCREEN"))
        self.diabetes_coverpage.setText(_translate("MainWindow", "DIABETES RISK PREDICTION"))
        self.diabtes_pregnancies.setText(_translate("MainWindow", "PREGNANCIES"))
        self.diabetes_glucose.setText(_translate("MainWindow", "GLUCOSE"))
        self.diabetes_bp.setText(_translate("MainWindow", "BLOOD PRESSURE"))
        self.diabetes_skin.setText(_translate("MainWindow", "SKIN THICKNESS"))
        self.diabetes_insulin.setText(_translate("MainWindow", "INSULIN"))
        self.diabetes_pedigree.setText(_translate("MainWindow", "PEDIGREE FUNCTION"))
        self.diabetes_age.setText(_translate("MainWindow", "AGE"))
        self.diabetes_bmi.setText(_translate("MainWindow", "BODY MASS INDEX"))
        self.diabetes_genreport.setText(_translate("MainWindow", "GENERATE REPORT"))
        self.diabetes_classifybtn.setText(_translate("MainWindow", "CLASSIFY"))
        self.diabetes_homescreenbtn.setText(_translate("MainWindow", "BACK TO HOME SCREEN"))
        self.covid_cough_4.setText(_translate("MainWindow", "ENTER DETAILS :"))
        self.lung_coverpage.setText(_translate("MainWindow", "LUNG RISK PREDICTION"))
        self.lung_browsebtn.setText(_translate("MainWindow", "BROWSE"))
        self.lung_classifybtn.setText(_translate("MainWindow", "CLASSIFY"))
        self.lung_homescreenbtn.setText(_translate("MainWindow", "BACK TO HOME SCREEN"))
        self.lung_genreport.setText(_translate("MainWindow", "GENERATE REPORT"))
        self.brain_coverpage.setText(_translate("MainWindow", "BRAIN TUMOUR RISK PREDICTION"))
        self.brain_browsebtn.setText(_translate("MainWindow", "BROWSE"))
        self.brain_genreport.setText(_translate("MainWindow", "GENERATE REPORT"))
        self.brain_classifybtn.setText(_translate("MainWindow", "CLASSIFY"))
        self.brain_homescreenbtn.setText(_translate("MainWindow", "BACK TO HOME SCREEN"))
        self.blood_classifybtn.setText(_translate("MainWindow", "CLASSIFY"))
        self.blood_homescreenbtn.setText(_translate("MainWindow", "BACK TO HOME SCREEN"))
        self.blood_browsebtn.setText(_translate("MainWindow", "BROWSE"))
        self.blood_genreport.setText(_translate("MainWindow", "GENERATE REPORT"))
        self.blood_coverpage.setText(_translate("MainWindow", "BLOOD RISK PREDICTION"))
        self.covid_coverpage.setText(_translate("MainWindow", "COVID-19 RISK PREDICTION"))
        self.covid_cough.setText(_translate("MainWindow", "DRY COUGH"))
        self.covid_fever.setText(_translate("MainWindow", "HIGH FEVER"))
        self.covid_throat.setText(_translate("MainWindow", "SORE THROAT"))
        self.covid_breathing.setText(_translate("MainWindow", "DIFFICULTY IN BREATHING"))
        self.covid_genreport.setText(_translate("MainWindow", "GENERATE REPORT"))
        self.covid_homescreenbtn.setText(_translate("MainWindow", "BACK TO HOME SCREEN"))
        self.covid_classifybtn.setText(_translate("MainWindow", "CLASSIFY"))
        self.covid_enterdetaulslbl.setText(_translate("MainWindow", "ENTER DETAILS* :"))
        self.covid_notice.setText(_translate("MainWindow", "*THE GIVEN BELOW VALUES ARE OF A SCORE OUT OF 20"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
